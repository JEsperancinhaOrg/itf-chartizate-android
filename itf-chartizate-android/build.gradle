apply plugin: 'com.android.library'
apply plugin: 'jacoco'

allprojects {
    repositories {
        mavenLocal()
        mavenCentral()
        google()
        maven { url 'https://jitpack.io' }
    }
}


task wrapper(type: Wrapper) {
    gradleVersion = '8.0.0'
}


android {
    compileSdkVersion 31
    buildToolsVersion "30.0.2"
    defaultConfig {
        minSdkVersion 29
        targetSdkVersion 31
        versionCode 1
        versionName "1.0"
        maxSdkVersion 31
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility = '11'
        targetCompatibility = '11'
    }
    lintOptions {
        abortOnError false
    }
    packagingOptions {
        exclude 'META-INF/LICENSE.md'
        exclude 'META-INF/LICENSE-notice.md'
    }
    testOptions {
        execution 'ANDROIDX_TEST_ORCHESTRATOR'
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'org.jesperancinha.itf:itf-chartizate-api:5.0.1'
    implementation 'com.android.support:multidex:1.0.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.mockito:mockito-core:4.7.0'
    androidTestImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    androidTestImplementation 'org.assertj:assertj-core:3.23.1'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'org.mockito:mockito-android:4.8.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestUtil 'androidx.test:orchestrator:1.4.1'
}

def siteUrl = 'https://github.com/JEsperancinhaOrg/itf-chartizate-android'
def gitUrl = 'scm:git:https://github.com/JEsperancinhaOrg/itf-chartizate-android.git'

group = "org.jesperancinha.itf"
version = "6.0.1"

task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    archiveClassifier.set("sources")
}

task javadoc(type: Javadoc) {
    dependsOn('generateDebugRFile')
    source = android.sourceSets.main.java.srcDirs
    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

afterEvaluate {
    javadoc.classpath += files(android.libraryVariants.collect { variant ->
        variant.javaCompileProvider.get().classpath.files
    })
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveClassifier.set("javadoc")
    from javadoc.destinationDir
}
artifacts {
    archives javadocJar
    archives sourcesJar
}

Properties properties = new Properties()
properties.load(project.rootProject.file('local.properties').newDataInputStream())

jacoco {
    toolVersion = "0.8.7"
    reportsDir file("$buildDir/jacoco")
}

tasks.withType(Test) {
    reports {
        html.enabled false
    }
    useJUnitPlatform()
    finalizedBy(jacocoTestReport)
}

task jacocoTestReport(type: JacocoReport, dependsOn: tasks.withType(Test)) {
    reports {
        xml.required = true
        csv.required = false
        html.required = false
    }
}



dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'org.jesperancinha.itf:itf-chartizate-api:5.0.1'
    implementation 'com.android.support:multidex:1.0.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.0'
    testImplementation 'org.mockito:mockito-core:4.7.0'
    androidTestImplementation 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
    androidTestImplementation 'org.assertj:assertj-core:3.23.1'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'org.mockito:mockito-android:4.8.0'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test:runner:1.4.0'
    androidTestUtil 'androidx.test:orchestrator:1.4.1'
}


